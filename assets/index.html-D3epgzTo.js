import{_ as s,c as e,a,o as t}from"./app-Cwg-pqKw.js";const n={};function h(l,i){return t(),e("div",null,i[0]||(i[0]=[a(`<p>在Web开发中，<code>window.location.href</code>和Vue Router（或其他现代前端路由库如React Router）是两种常见的页面跳转方式。它们各有特点，适用于不同的场景和需求。</p><h3 id="_1-window-location-href" tabindex="-1"><a class="header-anchor" href="#_1-window-location-href"><span>1. <code>window.location.href</code></span></a></h3><p><code>window.location.href</code>是一个直接操作浏览器地址栏的方法，可以直接改变当前页面的URL，从而实现页面跳转。这种方式类似于传统的服务器端重定向。例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">window</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">location</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">href</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://www.example.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>优点：</strong></p><ul><li>简单直接，适用于任何需要立即跳转的场景。</li><li>可以用于跨域的页面跳转，特别是在某些情况下需要绕过前端路由的限制时。</li></ul><p><strong>缺点：</strong></p><ul><li>页面会重新加载，用户体验不如单页面应用（SPA）中的路由跳转流畅。</li><li>不利于保持应用的状态，例如滚动位置、表单数据等。</li><li>不是前端路由的最佳实践，尤其是在使用现代前端框架如Vue或React时。</li></ul><h3 id="_2-vue-router-或其他前端路由库" tabindex="-1"><a class="header-anchor" href="#_2-vue-router-或其他前端路由库"><span>2. Vue Router（或其他前端路由库）</span></a></h3><p>Vue Router是Vue.js的官方路由管理器，它允许你通过组件的方式构建单页面应用（SPA）。使用Vue Router进行页面跳转不仅可以保持应用的单页面特性，还可以利用其提供的各种功能，如导航守卫、动态路由匹配等。例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 使用Vue Router的编程式导航</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/new-path</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用命名路由：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">user</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> params</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> userId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 123</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>优点：</strong></p><ul><li>保持了页面的状态，不会导致页面的重新加载。</li><li>提供了丰富的导航功能，如路由守卫、动态路由等。</li><li>用户体验更流畅，符合现代Web应用的需求。</li></ul><p><strong>缺点：</strong></p><ul><li>需要额外的配置和集成工作，尤其是在初始化阶段。</li><li>不适用于需要立即跳转到外部链接的场景。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li>如果你的目标是实现一个单页面应用（SPA），并希望用户体验流畅且不重新加载页面，推荐使用Vue Router或其他前端路由库进行页面跳转。</li><li>如果你的应用需要在不重新加载页面的情况下跳转到外部链接，或者需要绕过前端路由的限制（如某些特定情况下的跨域问题），可以使用<code>window.location.href</code>。但在大多数现代Web应用中，推荐使用前端路由库来处理内部导航。</li></ul>`,19)]))}const p=s(n,[["render",h]]),k=JSON.parse('{"path":"/home/6o4smon1/","title":"路由跳转的方式","lang":"zh-CN","frontmatter":{"title":"路由跳转的方式","createTime":"2025/08/08 21:03:12","permalink":"/home/6o4smon1/","description":"在Web开发中，window.location.href和Vue Router（或其他现代前端路由库如React Router）是两种常见的页面跳转方式。它们各有特点，适用于不同的场景和需求。 1. window.location.href window.location.href是一个直接操作浏览器地址栏的方法，可以直接改变当前页面的URL，从而实现...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"路由跳转的方式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-08T13:46:42.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://niuck.cn/home/6o4smon1/"}],["meta",{"property":"og:site_name","content":"宁采柯的小窝"}],["meta",{"property":"og:title","content":"路由跳转的方式"}],["meta",{"property":"og:description","content":"在Web开发中，window.location.href和Vue Router（或其他现代前端路由库如React Router）是两种常见的页面跳转方式。它们各有特点，适用于不同的场景和需求。 1. window.location.href window.location.href是一个直接操作浏览器地址栏的方法，可以直接改变当前页面的URL，从而实现..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-08T13:46:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-08T13:46:42.000Z"}]]},"readingTime":{"minutes":2.08,"words":623},"git":{"createdTime":1754660802000,"updatedTime":1754660802000,"contributors":[{"name":"niuchark","username":"niuchark","email":"3248234300@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/niuchark?v=4","url":"https://github.com/niuchark"}]},"autoDesc":true,"filePathRelative":"notes/home/2.八股详解/router-jump.md","headers":[]}');export{p as comp,k as data};
